package chapter6;
//枚举类实现接口，并为每个枚举值都重写info方法。
public enum Gender implements GenderDesc{
	MALE("男")
	{
		public void info()
		{
			System.out.println("这个枚举值代表男性");
		}
	},
	FEMALE("女")
	{
		public void info()
		{
			System.out.println("这个枚举值代表女性");
		}
	};
	private final String name;
	private Gender(String name) {
		this.name = name;
	}
	public String getName() {
		return name;
	}
	

}


package chapter6;
//枚举类中可以函抽象方法，但是定义每个枚举值时必须为抽象方法提供实现。
public enum Operation {
   PLUS
   {
	   public double eval(double x,double y)
	   {
		   return x+y;
	   }
   },
   MINUS
   {
	   public double eval(double x,double y)
	   {
		   return x-y;
	   }
   },
   TIMWS
   {
	   public double eval(double x,double y)
	   {
		   return x*y;
	   }
   },
   DIVIDE
   {
	   public double eval(double x,double y)
	   {
		   return x/y;
	   }
   };
	public abstract double eval(double x,double y);
	public static void main(String[] args) {
		System.out.println(Operation.PLUS.eval(45, 45));
		System.out.println(Operation.MINUS.eval(15,45));
		System.out.println(Operation.TIMWS.eval(45, 2));
        System.out.println(Operation.DIVIDE.eval(15, 3));
	}
	
}
